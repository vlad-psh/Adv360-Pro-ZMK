
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
    &none   &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                &mo 1                                                                                &mo 1  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp EQUAL  &kp MINUS  &kp RIGHT_BRACKET
    &none      &kp Q        &kp W     &kp E       &kp R        &kp T            &kp PG_UP                                                                         &kp C_VOL_UP      &kp Y          &kp U         &kp I      &kp O      &kp P   &kp LEFT_BRACKET
 &kp LCMD      &kp A        &kp S     &kp D       &kp F        &kp G            &kp PG_DN  &kp ENTER  &kp LEFT_ALT                  &kp DELETE  &kp BACKSPACE     &kp C_VOL_DN      &kp H          &kp J         &kp K      &kp L   &kp SEMI            &kp SQT
    &none      &kp Z        &kp X     &kp C       &kp V        &kp B                                     &kp ENTER                       &none                                      &kp N          &kp M     &kp COMMA    &kp DOT   &kp FSLH              &none
 &kp CAPS  &kp GRAVE      &kp ESC   &kp TAB       &mo 2                         &kp LCTRL  &kp SPACE    &kp LSHIFT                   &kp ENTER          &mo 2  &kp RIGHT_SHIFT             &kp BACKSPACE       &kp DEL      &none   &kp BSLH              &none
            >;
        };

        layer_mod {
            bindings = <
 &bootloader   &none   &none   &none   &none   &none                   &none                                                                             &none   &none   &none            &none   &none   &none  &bootloader
       &none   &none   &none   &none   &none   &none            &bt BT_SEL 0                                                                             &none   &none   &none            &none   &none   &none        &none
       &none   &none   &none   &none   &none   &none            &bt BT_SEL 1       &none   &none                       &none       &none                 &none   &none   &none            &none   &none   &none        &none
       &none   &none   &none   &none   &none   &none                                       &none                  &bl BL_INC                                     &none   &none            &none   &none   &none        &none
       &none   &none   &none   &none   &none                           &none  &bt BT_CLR   &none                  &bl BL_DEC  &bl BL_TOG  &rgb_ug RGB_MEFS_CMD           &none  &rgb_ug RGB_TOG   &none   &none        &none
            >;
        };

        layer_num_sym {
            bindings = <
 &trans          &kp F1           &kp F2                &kp F3                 &kp F4     &kp F5            &trans                                                  &trans     &kp F6        &kp F7        &kp F8        &kp F9       &kp F10  &kp F12
 &trans          &kp N1           &kp N2                &kp N3                 &kp N4     &kp N5            &trans                                                  &trans     &kp N6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &trans
 &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp EXCL            &trans  &trans  &trans                  &trans  &trans  &trans   &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT         &none   &trans
 &trans           &none        &kp MINUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp UNDER                            &trans                  &trans                  &kp EQUAL      &kp PLUS        &trans        &trans        &trans   &trans
 &trans          &trans           &trans                &trans                 &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                   &trans        &trans        &trans        &trans   &trans
            >;
        };

    };
};
