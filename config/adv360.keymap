/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "behaviors.dtsi"
      #include "macros.dtsi"
    };
    combos {
      #include "combos.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_0 {
            bindings = <
 &none &ht EXCL N1 &ht AT N2 &ht HASH N3 &ht DLLR N4 &ht PRCNT N5 &sl 4                                                            &sl 4 &ht CARET N6 &ht AMPS N7 &ht STAR N8 &ht GRAVE N9 &ht TILDE N0 &none
 &kp ESC   &kp Q    &kp W     &kp E      &kp R      &kp T     &none                                                                 &kp C_VOL_UP    &kp Y    &kp U      &kp I      &kp O      &kp P     &kp EQUAL
 &kp TAB   &kp A    &kp S     &kp D      &kp F      &kp G     &kp LSHFT       &mo 3      &kp LALT             &kp RALT    &kp ENTER &kp C_VOL_DN    &kp H    &kp J      &kp K      &kp L      &kp SEMI  &kp SQT
 &mo 5     &kp Z    &kp X     &kp C      &kp V      &kp B                                &kp LCTRL            &kp RCTRL                             &kp N    &kp M      &kp COMMA  &kp DOT    &kp FSLH  &kp MINUS
 &none     &kp LBKT &kp ESC   &none      &none                &mt LGUI ENTER  &kp SPACE  &kp LCTRL            &kp RGUI    &kp RCTRL &kp RSHFT                &kp BSPC   &kp DEL    &none      &kp RBKT  &kp ENTER
            >;
        };

        layer_colemak_1 {
            bindings = <
 &to 0   &trans  &trans  &trans  &trans  &trans &trans                                            &trans  &trans  &trans  &trans  &trans  &trans   &trans
 &trans  &kp Q   &kp W   &kp F   &kp P   &kp B  &trans                                            &trans  &kp J   &kp M   &kp U   &kp Y   &kp SEMI &trans
 &trans  &kp A   &kp R   &kp S   &kp T   &kp G  &trans  &trans    &trans        &trans  &trans    &trans  &kp H   &kp N   &kp E   &kp I   &kp O    &trans
 &trans  &kp Z   &kp X   &kp C   &kp D   &kp V                    &trans        &trans                    &kp K   &kp L   &trans  &trans  &trans   &trans
 &trans  &trans  &trans  &trans  &trans         &trans  &trans    &trans        &trans  &trans    &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        layer_qwerty_mod_2 {
            bindings = <
 &to 0   &trans  &trans  &trans    &trans  &trans   &trans                                            &trans   &trans  &trans      &trans     &trans     &trans    &trans
 &trans  &kp Q   &kp W   &kp T     &kp R   &kp K    &trans                                            &trans   &kp Y    &kp J      &kp I      &kp H      &kp SEMI  &trans
 &trans  &kp A   &kp S   &kp D     &kp F   &kp G    &trans     &trans  &trans          &trans  &trans &trans   &kp U    &kp N      &kp E      &kp L      &kp O     &trans
 &trans  &kp Z   &kp X   &kp C     &kp V   &kp B                       &trans          &trans                  &kp P    &kp M      &kp COMMA  &kp DOT    &kp FSLH  &trans
 &trans  &trans  &trans  &trans    &trans           &trans     &trans  &trans          &trans  &trans &trans            &trans     &trans     &trans     &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
 &to 0   &trans  &trans  &trans  &trans  &trans &trans                                         &trans  &trans  &trans  &trans  &trans  &trans   &trans
 &trans  &kp Q   &kp W   &kp F   &kp P   &kp G  &trans                                         &trans  &kp J   &kp L   &kp U   &kp Y   &kp SEMI &trans
 &trans  &kp A   &kp R   &kp S   &kp T   &kp D  &trans  &trans &trans        &trans  &trans    &trans  &kp H   &kp N   &kp E   &kp I   &kp O    &trans
 &trans  &kp Z   &kp X   &kp C   &kp V   &kp B                 &trans        &trans                    &kp K   &kp M   &trans  &trans  &trans   &trans
 &trans  &trans  &trans  &trans  &trans         &trans  &mo 5  &trans        &trans  &kp SPACE &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        layer_mod_4 {
            bindings = <
 &to 1   &none    &none    &DSHOT      &WSHOT   &none     &none                                                                 &none   &none    &none    &none    &none     &none     &none
 &to 2   &kp F11  &kp F12  &kp F13     &kp F14  &kp F15   &bt BT_SEL 0                                                          &none   &kp F16  &kp F17  &kp F18  &kp F19   &kp F20   &none
 &none   &kp F1   &kp F2   &kp F3      &kp F4   &kp F5    &bt BT_SEL 1  &bt BT_CLR  &bootloader           &bootloader   &none   &none   &kp GRAVE &kp LBKT &kp RBKT &kp BSLH &none     &none
 &tog 5  &none    &none    &none       &none    &none                               &none                 &none                         &none    &none    &none    &none     &none     &none
 &none   &none    &none    &none       &none              &kp LGUI      &kp SPACE   &kp LCTRL             &none         &kp RSHFT &kp ENTER      &none    &none    &none     &none     &bl BL_TOG
            >;
        };

        layer_arrows_5 {
            bindings = <
 &to 0    &trans    &trans       &trans     &trans      &trans      &trans                                             &trans  &trans     &trans    &trans     &trans     &trans     &trans
 &trans   &none     &none        &none      &none       &none       &trans                                             &trans  &VIMQ      &kp PGUP  &arr_up    &kp PGDN   &kp F15    &kp F16
 &trans   &none     &kp F11      &kp F12    &kp F13     &kp F14     &kp LSHFT &trans  &trans           &trans  &trans  &trans  &VIMW      &arr_left &arr_down  &arr_right &kp F17    &kp F18
 &trans   &none     &kp LG(LC(LA(J))) &kp LG(LC(LA(R))) &kp LG(LC(LA(E))) &none       &trans           &trans                  &kp F10    &kp BSPC  &kp DEL    &none      &kp F19    &kp F20
 &trans   &trans    &trans       &none      &none                   &trans    &trans  &trans           &trans  &kp RSHFT &kp ENTER        &trans    &trans     &trans     &trans     &kp LG(LC(LA(J)))
            >;
        };

    };
};

// vim: nowrap:filetype=dts
