moht: mo_hold_tap {
    compatible = "zmk,behavior-hold-tap";
    label = "mo_hold_tap";
    #binding-cells = <2>;
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&mo>, <&mo>; // <HOLD> <TAP>
};
stht: sticky_hold_tap {
    compatible = "zmk,behavior-hold-tap";
    label = "sticky_hold_tap";
    #binding-cells = <2>;
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&sk>; // <HOLD> <TAP>
};
td_ctrl_cmd: tap_dance_ctrl_cmd {
    compatible = "zmk,behavior-tap-dance";
    label = "tap_dance_ctrl_cmd";
    #binding-cells = <0>;
    tapping-term-ms = <200>;
    bindings = <&kp LCTRL>, <&sk LCMD>;
};
mo32: mod_3_and_2 {
    compatible = "zmk,behavior-mod-morph";
    label = "mod_3_and_2";
    #binding-cells = <0>;
    bindings = <&mo 3>, <&mo 2>;
    mods = <(MOD_LCTL)>;
};
arr_bspc: arrow_layer_backspace {
    compatible = "zmk,behavior-mod-morph";
    label = "arrow_layer_backspace";
    #binding-cells = <0>;
    bindings = <&kp BSPC>, <&kp LG(BSPC)>;
    mods = <(MOD_LCTL)>;
};
eng_rus: eng_rus_layout_switcher {
    compatible = "zmk,behavior-mod-morph";
    label = "eng_rus_layout_switcher";
    #binding-cells = <0>;
    bindings = <&kp LG(LC(LS(E)))>, <&kp LG(LC(LS(R)))>;
    mods = <(MOD_LSFT|MOD_LCTL)>;
};
morph_tab: morph_tab {
    compatible = "zmk,behavior-mod-morph";
    label = "morph_tab";
    #binding-cells = <0>;
    bindings = <&kp TAB>, <&kp LC(PG_DN)>;
    mods = <(MOD_LSFT)>;
};
morph_untab: morph_tab_reverse {
    compatible = "zmk,behavior-mod-morph";
    label = "morph_tab_reverse";
    #binding-cells = <0>;
    bindings = <&kp LS(TAB)>, <&kp LC(PG_UP)>;
    mods = <(MOD_LSFT)>;
};
macro_quotes: macro_quotes{
compatible = "zmk,behavior-macro";
label = "macro_quotes";
#binding-cells = <0>;
bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>;
};
macro_dquotes: macro_dquotes{
compatible = "zmk,behavior-macro";
label = "macro_dquotes";
#binding-cells = <0>;
bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>;
};
macro_braces: macro_braces{
compatible = "zmk,behavior-macro";
label = "macro_braces";
#binding-cells = <0>;
bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
};
macro_parens: macro_parens{
compatible = "zmk,behavior-macro";
label = "macro_parens";
#binding-cells = <0>;
bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
};
macro_brackets: macro_brackets{
compatible = "zmk,behavior-macro";
label = "macro_brackets";
#binding-cells = <0>;
bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
};
macro_kinesis: macro_kinesis{
compatible = "zmk,behavior-macro";
label = "macro_kinesis";
#binding-cells = <0>;
bindings = <&kp LS(K)>, <&kp I>, <&kp N>, <&kp E>, <&kp S>, <&kp I>, <&kp S>;
};
